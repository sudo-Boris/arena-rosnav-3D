<!-- -->
<launch>
  <!-- Arguments -->
  <arg name="model"             default="burger" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="cmd_vel_topic"     default="/cmd_vel" />
  <arg name="odom_topic"        default="odom" />
  <arg name="move_forward_only" default="false"/>
  
  <!-- Task Manager sets goal to /goal topic -->
  <arg name="drl" default="true"/>

  <!-- move_base -->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find conventional)/config/tb3/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find conventional)/config/tb3/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />   
    <rosparam file="$(find conventional)/config/tb3/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find conventional)/config/tb3/global_costmap_params.yaml" command="load" />
  </node>

  <!-- AMCL -->
  <!-- <include file="$(find arena_bringup)/launch/amcl.launch">
    <arg name="drl" value="true"/>
  </include> -->

  <!-- scan mapping, because training and real scan calibration may differ -->
  <include file="$(find arena_bringup)/launch/map_scan.launch">
  </include>


  <!-- spacial_horizon -->
  <node pkg="arena_spacial_horizon" type="spacial_horizon_node" name="spacial_horizon_node" output="screen">
    <rosparam file="$(find arena_bringup)/launch/plan_fsm_param.yaml" command="load" /> <!-- ns="fsm"-->
  </node>

  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find conventional)/config/tb3/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find conventional)/config/tb3/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find conventional)/config/tb3/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find conventional)/config/tb3/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find conventional)/config/tb3/move_base_params.yaml" command="load" /> 
    
    <rosparam file="$(find conventional)/config/tb3/dwa_local_planner_params_$(arg model).yaml" command="load" />
   
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom"                            to="$(arg odom_topic)"/>
    <param name="DWAPlannerROS/min_vel_x"         value="0.0" if="$(arg move_forward_only)" />
    <param name="controller_frequency"            value="5.0" />
    <param name="planner_frequency"               value="0.0" />

  </node> -->

  <node pkg="rl_collision_avoidance" type="rl_collision_avoidance_node_tb3.py" name="rl_collision_avoidance" output="screen"/>

</launch>